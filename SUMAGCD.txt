#define N 100000
#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

long long int gcd(long long int a, long long int b) 
{ 
    if (a <= 0) 
        return b; 
    return gcd(b % a, a); 
} 
  
// Function to find gcd of array of 
// numbers 
long long int findGCD(vector<long long int> arr,unsigned long long int n) 
{ 
    int result = *(arr.begin()); 
    for (int i = 1; i < n; i++) 
        result = gcd(arr[i], result); 
    
    //cout<<result<<endl;
    return result; 
} 


int main() {
    
    unsigned long long int T;
    
    cin>>T;
    while(T--)
    {
        unsigned long long int sum=0,sum2=0;
        long long int max=-1,max2=-1;
        unsigned long long int n;
        cin>>n;
        std::vector<long long int> a,b;
        long long int temp;
        for(auto i=0;i<n;i++)
        {
            cin>>temp;
            //cout<<temp<<"\t";
            if(temp>max)
            {
                max2=max;
                max=temp;
                
            }
            
            else if(temp>max2 && temp!=max)
            {
                max2=temp;
            }
            a.push_back(temp);
            b.push_back(temp);
        }
        
        //cout<<"max is:"<<max<<endl;
        //cout<<"max2 is:"<<max2<<endl;
        
        a.erase(std::remove(a.begin(), a.end(), max), a.end());
        //for(auto i:a)cout<<i<<"\t";
        //cout<<a.size()<<"size is"<<endl;
         //cout<<"The sum:"<<sum<<endl;
        if(a.size()>0){
            sum=findGCD(a,a.size());
           
            
        };
        
        if(a.size()==0)
        {
            if(max>=0)
            sum=max;
        }
        //cout<<sum<<"sum"<<endl;
        //cout<<max<<"max"<<endl;
        if(max>=0)
        sum=sum+max;
        
        b.erase(std::remove(b.begin(), b.end(), max2), b.end());
        if(b.size()>0){
            sum2=findGCD(b,b.size());
            
        };
        
        if(b.size()==0)
        {
            if(max2>=0)
            sum2=max2;
        }
    
        if(max2>=0)
        sum2=sum2+max2;
        
        if(sum>sum2)
            cout<<sum<<endl;
        else
            cout<<sum2<<endl;
    }

	return 0;
}
